/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.genoscope;

import com.genoscope.reader.ColorReader;
import com.genoscope.reader.Reader;
import com.genoscope.renderer.GenoscopeRenderer;
import com.genoscope.renderer.visualizers.ChromosomeVisualizer;
import com.genoscope.renderer.visualizers.Visualizer;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author alim
 */
public class GenoscopeApp extends javax.swing.JFrame {
    /**
     * Creates new form GenoscopeApp
     */
    public GenoscopeApp() {
        try {
            //System.out.println(javax.swing.UIManager.getSystemLookAndFeelClassName());
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                //System.out.println(info.getName());
                if ("GTK+".equals(info.getName())) {

                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
                if ("Windows".equals(info.getName())) {

                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }

            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenoscopeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenoscopeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenoscopeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenoscopeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        initComponents();
		ColorReader.readFile("resources/color.cl");
        //Do not change If you don't know
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(addReadableFileFilters());
        fileChooser.setFileHidingEnabled(true);

        pdfChooser.setAcceptAllFileFilterUsed(false);
        pdfChooser.setFileFilter(addPdfFileFilters());

        pngChooser.setAcceptAllFileFilterUsed(false);
        pngChooser.setFileFilter(addPngFileFilters());

        jpgChooser.setAcceptAllFileFilterUsed(false);
        jpgChooser.setFileFilter(addJpgFileFilters());

//		fileChooser.setCurrentDirectory( new File( "./") );

        //initialize
        state = new AppState();
        DefaultMutableTreeNode chromosome = new DefaultMutableTreeNode("Chromosomes");
        DefaultMutableTreeNode pairings = new DefaultMutableTreeNode("Pairings");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) objectTree.getModel().getRoot();
        root.add(chromosome);
        root.add(pairings);
        objectTree.expandRow(0);
        objectTree.expandRow(1);
        objectTree.expandRow(2);
        state.setChromosomeTree(chromosome);
        state.setPairingTree(pairings);
    }

    public AppState getAppState() {
        return state;
    }
    //required for File Filter DO NOT DELETE

    private FileFilter addReadableFileFilters() {
        return new FileNameExtensionFilter("supported types (*.cn, *.bed, *.cb, *.rd, *.bedpe, *.psa)",
                "cn", "bed", "cb", "rd","bedpe","psa");
    }

    private FileFilter addPdfFileFilters() {
        return new FileNameExtensionFilter("Printable Document Format (*.pdf)", "pdf");

    }

    private FileFilter addPngFileFilters() {
        return new FileNameExtensionFilter("PNG File (*.png)", "png");

    }

     private FileFilter addJpgFileFilters() {
        return new FileNameExtensionFilter("JPG File (*.jpg)", "jpg","jpeg");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jTextField1 = new javax.swing.JTextField();
        pdfChooser = new javax.swing.JFileChooser();
        pngChooser = new javax.swing.JFileChooser();
        jpgChooser = new javax.swing.JFileChooser();
        jPanel5 = new javax.swing.JPanel();
        jFrame1 = new javax.swing.JFrame();
        mainPanel = new javax.swing.JPanel();
        leftToolBar = new javax.swing.JPanel();
        viewControl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        objectProperties = new javax.swing.JScrollPane();
        propertiesPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        objectName = new javax.swing.JLabel();
        objName = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        objectName1 = new javax.swing.JLabel();
        objPosX = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        objectName2 = new javax.swing.JLabel();
        objPosY = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        objectName3 = new javax.swing.JLabel();
        objVisible = new javax.swing.JCheckBox();
        objectList = new javax.swing.JScrollPane();
        objectTree = new javax.swing.JTree();
        drawingPanel = new javax.swing.JPanel();
        OpenGLContainer = new javax.swing.JPanel();
        OpenGLPanel = new javax.swing.JPanel();
        verticalScroll = new javax.swing.JScrollBar();
        horizontalScroll = new javax.swing.JScrollBar();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        btnOpenFile = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jButton19 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GenoScope");
        setMinimumSize(new java.awt.Dimension(700, 555));
        getContentPane().setLayout(new java.awt.CardLayout());

        mainPanel.setMinimumSize(new java.awt.Dimension(800, 575));

        leftToolBar.setAlignmentX(0.0F);
        leftToolBar.setAlignmentY(0.0F);
        leftToolBar.setMaximumSize(new java.awt.Dimension(275, 32767));
        leftToolBar.setMinimumSize(new java.awt.Dimension(275, 500));
        leftToolBar.setPreferredSize(new java.awt.Dimension(275, 286));
        leftToolBar.setLayout(new javax.swing.BoxLayout(leftToolBar, javax.swing.BoxLayout.Y_AXIS));

        viewControl.setBorder(javax.swing.BorderFactory.createTitledBorder("View Control"));
        viewControl.setMaximumSize(new java.awt.Dimension(32767, 100));
        viewControl.setMinimumSize(new java.awt.Dimension(0, 100));

        jLabel1.setText("Zoom");

        jButton2.setText("+");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("-");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Reset Layout");
        jButton4.setToolTipText("ResetLayout");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Show Labels");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Hide All");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewControlLayout = new javax.swing.GroupLayout(viewControl);
        viewControl.setLayout(viewControlLayout);
        viewControlLayout.setHorizontalGroup(
            viewControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewControlLayout.createSequentialGroup()
                .addGroup(viewControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewControlLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(viewControlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewControlLayout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                        .addGap(19, 19, 19))
                    .addGroup(viewControlLayout.createSequentialGroup()
                        .addComponent(jCheckBox2)
                        .addContainerGap())))
        );
        viewControlLayout.setVerticalGroup(
            viewControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel1)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        leftToolBar.add(viewControl);

        objectProperties.setBorder(javax.swing.BorderFactory.createTitledBorder("Object Properties"));
        objectProperties.setMaximumSize(new java.awt.Dimension(32767, 200));
        objectProperties.setMinimumSize(new java.awt.Dimension(250, 200));
        objectProperties.setName("");
        objectProperties.setPreferredSize(new java.awt.Dimension(250, 200));

        propertiesPanel.setMaximumSize(new java.awt.Dimension(240, 1000));
        propertiesPanel.setMinimumSize(new java.awt.Dimension(240, 35));
        propertiesPanel.setOpaque(false);
        propertiesPanel.setPreferredSize(new java.awt.Dimension(240, 175));
        propertiesPanel.setRequestFocusEnabled(false);
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout1.setAlignOnBaseline(true);
        propertiesPanel.setLayout(flowLayout1);

        objectName.setText("Name");
        objectName.setMaximumSize(new java.awt.Dimension(90, 16));
        objectName.setMinimumSize(new java.awt.Dimension(90, 16));
        objectName.setPreferredSize(new java.awt.Dimension(90, 16));
        jPanel1.add(objectName);

        objName.setEditable(false);
        objName.setMaximumSize(new java.awt.Dimension(150, 2147483647));
        objName.setMinimumSize(new java.awt.Dimension(150, 22));
        objName.setPreferredSize(new java.awt.Dimension(150, 22));
        objName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objNameActionPerformed(evt);
            }
        });
        jPanel1.add(objName);

        propertiesPanel.add(jPanel1);

        objectName1.setText("Position X");
        objectName1.setMaximumSize(new java.awt.Dimension(90, 16));
        objectName1.setMinimumSize(new java.awt.Dimension(90, 16));
        objectName1.setPreferredSize(new java.awt.Dimension(90, 16));
        jPanel2.add(objectName1);

        objPosX.setMaximumSize(new java.awt.Dimension(150, 2147483647));
        objPosX.setMinimumSize(new java.awt.Dimension(150, 22));
        objPosX.setPreferredSize(new java.awt.Dimension(150, 22));
        objPosX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objPosXActionPerformed(evt);
            }
        });
        jPanel2.add(objPosX);

        propertiesPanel.add(jPanel2);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        objectName2.setText("Position Y");
        objectName2.setMaximumSize(new java.awt.Dimension(90, 16));
        objectName2.setMinimumSize(new java.awt.Dimension(90, 16));
        objectName2.setPreferredSize(new java.awt.Dimension(90, 16));
        jPanel3.add(objectName2);

        objPosY.setMaximumSize(new java.awt.Dimension(150, 2147483647));
        objPosY.setMinimumSize(new java.awt.Dimension(150, 22));
        objPosY.setPreferredSize(new java.awt.Dimension(150, 22));
        objPosY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objPosYActionPerformed(evt);
            }
        });
        jPanel3.add(objPosY);

        propertiesPanel.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        objectName3.setText("Visible");
        objectName3.setMaximumSize(new java.awt.Dimension(90, 16));
        objectName3.setMinimumSize(new java.awt.Dimension(90, 16));
        objectName3.setPreferredSize(new java.awt.Dimension(90, 16));
        jPanel4.add(objectName3);

        objVisible.setAlignmentX(0.5F);
        objVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objVisibleActionPerformed(evt);
            }
        });
        jPanel4.add(objVisible);

        propertiesPanel.add(jPanel4);

        objectProperties.setViewportView(propertiesPanel);

        leftToolBar.add(objectProperties);

        objectList.setBorder(javax.swing.BorderFactory.createTitledBorder("Object List"));
        objectList.setMaximumSize(new java.awt.Dimension(32767, 500));
        objectList.setMinimumSize(new java.awt.Dimension(37, 150));
        objectList.setPreferredSize(new java.awt.Dimension(12, 150));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        objectTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        objectTree.setEditable(true);
        objectTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                objectTreeMousePressed(evt);
            }
        });
        objectList.setViewportView(objectTree);

        leftToolBar.add(objectList);

        drawingPanel.setLayout(new javax.swing.BoxLayout(drawingPanel, javax.swing.BoxLayout.PAGE_AXIS));

        OpenGLContainer.setLayout(new javax.swing.BoxLayout(OpenGLContainer, javax.swing.BoxLayout.LINE_AXIS));

        OpenGLPanel.setLayout(new java.awt.CardLayout());
        OpenGLContainer.add(OpenGLPanel);
        OpenGLContainer.add(verticalScroll);

        drawingPanel.add(OpenGLContainer);

        horizontalScroll.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        drawingPanel.add(horizontalScroll);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/file_yellow_empty.png"))); // NOI18N
        jButton1.setToolTipText("New Data");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        btnOpenFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/directory_open.png"))); // NOI18N
        btnOpenFile.setToolTipText("Open Data");
        btnOpenFile.setFocusable(false);
        btnOpenFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOpenFile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOpenFile);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/floppy_35inch_blue.png"))); // NOI18N
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton6);
        jToolBar1.add(jSeparator1);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/scissors.png"))); // NOI18N
        jButton7.setToolTipText("Cut");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton7);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/copy.png"))); // NOI18N
        jButton8.setToolTipText("Copy");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton8);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/paste.png"))); // NOI18N
        jButton9.setToolTipText("Paste");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton9);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/delete_red.png"))); // NOI18N
        jButton10.setToolTipText("Delete");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton10);
        jToolBar1.add(jSeparator2);

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/magnifier_plus_blue.png"))); // NOI18N
        jButton13.setToolTipText("Zoom In");
        jButton13.setFocusable(false);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton13);

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/magnifier_minus_blue.png"))); // NOI18N
        jButton14.setToolTipText("Zoom Out");
        jButton14.setFocusable(false);
        jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton14);
        jToolBar1.add(jSeparator4);

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/select_all.png"))); // NOI18N
        jButton15.setToolTipText("Select All");
        jButton15.setFocusable(false);
        jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton15.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton15);

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/select_none.png"))); // NOI18N
        jButton16.setToolTipText("Select None");
        jButton16.setFocusable(false);
        jButton16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton16.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton16);
        jToolBar1.add(jSeparator5);

        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/tools.png"))); // NOI18N
        jButton19.setToolTipText("Settings");
        jButton19.setFocusable(false);
        jButton19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton19.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton19);

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/info.png"))); // NOI18N
        jButton17.setToolTipText("About");
        jButton17.setFocusable(false);
        jButton17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton17.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton17);

        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/genoscope/resources/exit.png"))); // NOI18N
        jButton18.setToolTipText("Exit");
        jButton18.setFocusable(false);
        jButton18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton18.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton18);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leftToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drawingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drawingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leftToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(mainPanel, "card3");

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        jMenu1.setText("Export as");

        jMenuItem1.setText("PDF");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("JPG");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("PNG");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        fileMenu.add(jMenu1);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

	private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed

            int returnVal = fileChooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                if (file == null || !file.exists()) {
                    System.out.println("File does not exist!");
                    JOptionPane.showMessageDialog(this, "File does not exist");
                    openMenuItemActionPerformed(evt);
                    return;
                }
                Reader.readFile(file.getAbsolutePath(), state);
				//Genoscope.renderer.resetLayout();
            } else {
                System.out.println("File access cancelled by user.");
            }
	}//GEN-LAST:event_openMenuItemActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void objNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_objNameActionPerformed

    private void objPosXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objPosXActionPerformed
        int a = Integer.parseInt(objPosX.getText());
        if(a != 0){
            selectedVisualizer.setX(a);
        }
    }//GEN-LAST:event_objPosXActionPerformed

    private void objPosYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objPosYActionPerformed
        int a = Integer.parseInt(objPosY.getText());
        if(a != 0){
            selectedVisualizer.setY(a);
        }
    }//GEN-LAST:event_objPosYActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        int returnVal = pdfChooser.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = pdfChooser.getSelectedFile();
            String path = file.getAbsolutePath();
            int lastInd = path.lastIndexOf('.');
            String extension = path.substring(lastInd + 1);
            if (!extension.equals("pdf")) {
                new PdfExporter(path + ".pdf").start();
            } else {
                new PdfExporter(path).start();
            }
        }



    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int returnVal = jpgChooser.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jpgChooser.getSelectedFile();
            String path = file.getAbsolutePath();
            int lastInd = path.lastIndexOf('.');
            String extension = path.substring(lastInd + 1);
            if (!extension.equals("jpg") && !extension.equals("jpeg")) {
                new JpgExporter(path + ".jpg").start();
            } else {
                new JpgExporter(path).start();
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        int returnVal = pngChooser.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = pngChooser.getSelectedFile();
            String path = file.getAbsolutePath();
            int lastInd = path.lastIndexOf('.');
            String extension = path.substring(lastInd + 1);
            if (!extension.equals("png")) {
                new PngExporter(path + ".png").start();
            } else {
                new PngExporter(path).start();
            }
        }

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        showLabels = jCheckBox1.isSelected();
        GenoscopeRenderer.drawAll = true;
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Genoscope.renderer.zoomView(1.1f);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void objectTreeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_objectTreeMousePressed
        // Note: getUserObject should return a visualizer if selected
        //String node = ((DefaultMutableTreeNode)objectTree.getSelectionPath().getLastPathComponent()).getUserObject().toString();
        Object o=((DefaultMutableTreeNode)objectTree.getSelectionPath().getLastPathComponent()).getUserObject();
        if(o instanceof Visualizer)
            
        /*String[] parts = node.split(" - ");
        if(parts.length < 2)
            return;
        Visualizer a = null;
        a = state.getChromosomeVisualizer(parts[0],parts[1]);
        if(a == null)
        a = state.getPairingVisualizer(parts[0],parts[1],parts[2]);
        if(a!=null && selectedVisualizer != a)*/
            setSelectedVisualizer(o.toString(),(Visualizer)o);
    }//GEN-LAST:event_objectTreeMousePressed

    private void objVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objVisibleActionPerformed
        if(selectedVisualizer==null)
            return;
        selectedVisualizer.setVisible(objVisible.isSelected());
        if(objVisible.isSelected())
            state.showPairsOf(selectedVisualizer);
    }//GEN-LAST:event_objVisibleActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        exitMenuItemActionPerformed(null);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Genoscope.renderer.zoomView(0.9f);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Genoscope.renderer.getVisualizerList().clear();
        Genoscope.renderer.getInterVisualizers().clear();
        Genoscope.renderer.resetZoom();
        state.reset();
        DefaultMutableTreeNode chromosome = new DefaultMutableTreeNode("Chromosomes");
        DefaultMutableTreeNode pairings = new DefaultMutableTreeNode("Pairings");
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("root");
        root.add(chromosome);
        root.add(pairings);
        objectTree.setModel(new DefaultTreeModel(root));
        objectTree.expandRow(0);
        objectTree.expandRow(1);
        objectTree.expandRow(2);
        objectTree.repaint();
        state.setChromosomeTree(chromosome);
        state.setPairingTree(pairings);
        selectedVisualizer = null;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Genoscope.renderer.resetLayout();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        Genoscope.renderer.zoomView(1.1f);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        Genoscope.renderer.zoomView(0.9f);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        state.toggleAll(!jCheckBox2.isSelected());
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        state.toggleAll(true);
        jCheckBox2.setSelected(true);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        state.toggleAll(false);
        jCheckBox2.setSelected(false);
    }//GEN-LAST:event_jButton16ActionPerformed

    public void setSelectedVisualizer(String name,Visualizer a){
        objName.setText(name);
        objPosX.setText(a.getX() + "");
        objPosY.setText(a.getY() + "");
        objVisible.setSelected(a.isVisible());
        selectedVisualizer = a;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*
         * try { for (javax.swing.UIManager.LookAndFeelInfo info :
         * javax.swing.UIManager.getInstalledLookAndFeels()) { if
         * ("Nimbus".equals(info.getName())) {
         * javax.swing.UIManager.setLookAndFeel(info.getClassName()); break; } }
         * } catch (ClassNotFoundException ex) {
         * java.util.logging.Logger.getLogger(GenoscopeApp.class.getName()).log(java.util.logging.Level.SEVERE,
         * null, ex); } catch (InstantiationException ex) {
         * java.util.logging.Logger.getLogger(GenoscopeApp.class.getName()).log(java.util.logging.Level.SEVERE,
         * null, ex); } catch (IllegalAccessException ex) {
         * java.util.logging.Logger.getLogger(GenoscopeApp.class.getName()).log(java.util.logging.Level.SEVERE,
         * null, ex); } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         * java.util.logging.Logger.getLogger(GenoscopeApp.class.getName()).log(java.util.logging.Level.SEVERE,
         * null, ex); }
         */
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new GenoscopeApp().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel OpenGLContainer;
    public javax.swing.JPanel OpenGLPanel;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton btnOpenFile;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JPanel drawingPanel;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    public javax.swing.JScrollBar horizontalScroll;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JFileChooser jpgChooser;
    private javax.swing.JPanel leftToolBar;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField objName;
    private javax.swing.JTextField objPosX;
    private javax.swing.JTextField objPosY;
    private javax.swing.JCheckBox objVisible;
    private javax.swing.JScrollPane objectList;
    private javax.swing.JLabel objectName;
    private javax.swing.JLabel objectName1;
    private javax.swing.JLabel objectName2;
    private javax.swing.JLabel objectName3;
    private javax.swing.JScrollPane objectProperties;
    private javax.swing.JTree objectTree;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JFileChooser pdfChooser;
    private javax.swing.JFileChooser pngChooser;
    private javax.swing.JPanel propertiesPanel;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    public javax.swing.JScrollBar verticalScroll;
    private javax.swing.JPanel viewControl;
    // End of variables declaration//GEN-END:variables
    protected AppState state;
    public static boolean showLabels = true;
    public Visualizer selectedVisualizer;
}
